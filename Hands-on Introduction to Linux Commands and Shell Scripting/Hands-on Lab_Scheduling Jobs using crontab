



==============================Hands-on Lab: Common Linux/Unix Commands

Objectives
After completing this lab you will be able to:

 - List existing cron jobs.
 - Add a cron job.
 - Remove cron jobs.

--------------------


=====Exercise 1 - Understand crontab file syntax

--Cron is a system daemon used to execute desired tasks in the background at designated times.

--A crontab file is a simple text file containing a list of commands meant to be run at specified times. It is edited using the crontab command.

--Each line in crontab file has five time-and-date fields, followed by a command, followed by a newline character ('\n'). The fields are separated by spaces.

--The five time-and-date fields cannot contain spaces. The five time-and-date fields and their allowed values are as follows:
minute (0-59)
hour(0-23, 0 = midnight)
day (1-31)
month (1-12)
weekday (0-6, 0 = Sunday)

=====Exercise 2 - List cron jobs

--Run the commands below on the newly opened terminal.

crontab -l

--You may get a message no crontab for theia if your crontab is empty.

=====Exercise 3 - Add a job in the crontab file

3.1. Add a job to crontab.




crontab -e

--Your crontab file will be opened in an editor as shown in the image below.



--Add the below line at the end of the crontab file.

0 21 * * * echo "Welcome to cron" >> /tmp/echo.txt

--The above job specifies that the echo command should run when the minute is 0 and the hours is 21. It effectively means the job runs at 9.00 p.m every day.
--The output of the command should be sent to a file /tmp/echo.txt.
--Press Control + X to save the changes.
--Press 'Y' to confirm.



3.2. Schedule a shell script.

--To add a cron job, run the command below

crontab -e

--This will create a new crontab file for you(if you do not have one already) and now you are ready to add a new cron job.

--Your crontab file will be opened in an editor as shown in the image below.

--Scroll down to the end of the file using the arrow keys.
--Add the below line at the end of the crontab file.

--The above job specifies that the echo command should run when the minute is 0 and the hours is 21. It effectively means the job runs at 9.00 p.m every day.

--The output of the command should be sent to a file /tmp/echo.txt.

--Press Control + X to save the changes.
--Press 'Y' to confirm.
--Press Enter to come out of the editor.

--Check if the job is added to the crontab by running the following command.

crontab -l

--You should see the newly added job in the output.



3.2. Schedule a shell script.

--Let us create a simple shell script that prints the current time and the current disk usage statistics.

--Step 1: Create a new file:

--Step 2: Give the file name as 'diskusage.sh' and click 'OK'

--Step 3: Save the following commands into the shell script

#! /bin/bash
# print the current date time
date
# print the disk free statistics
df -h

--Step 4: Save the file using the File->Save menu option.

--Step 5: Verify that the script is working:

chmod u+x diskusage.sh
./diskusage.sh

--The script should print the current timestamp and the disk usage stats.

--Let us schedule this script to be run everyday at midnight 12:00 (when the hour is 0 on the 24 hour clock). 
--We want the output of this script to be appended to /home/project/diskusage.log.

--Edit the crontab.


crontab -e

--Add the following line to the end of the file:

0 0 * * * /home/project/disksusage.sh >>/home/project/diskusage.log


--Press Control + X to save the changes.

--Press 'Y' to confirm.

--Press Enter to come out of the editor.

--Check if the job is added to the crontab by running the following command.

crontab -l

--You should see the newly added job in the output.


Exercise 4 - Remove the current crontab

--The -r option causes the current crontab to be removed.

--Caution: This removes all your cron jobs. Be extra cautious when you use this command on a production server.

crontab -r

Verify if your crontab is removed.

crontab -l


										The End - Jeremias Tivane [https://www.linkedin.com/in/jeremiastivane]
